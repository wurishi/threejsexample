var u=Object.defineProperty;var p=(n,i,e)=>i in n?u(n,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[i]=e;var o=(n,i,e)=>(p(n,typeof i!="symbol"?i+"":i,e),e);import{E as I,Y as O,am as E,an as l,S as P,ao as S,ak as f,al as m,b as A,ap as g}from"./example-e9f3c815.js";class N extends I{constructor(){super(...arguments);o(this,"AMOUNT",6);o(this,"ASPECT_RATIO",1);o(this,"WIDTH",0);o(this,"HEIGHT",0);o(this,"mesh");o(this,"onResize",()=>{var e;if(this.ASPECT_RATIO=window.innerWidth/window.innerHeight,this.WIDTH=window.innerWidth/this.AMOUNT*window.devicePixelRatio,this.HEIGHT=window.innerHeight/this.AMOUNT*window.devicePixelRatio,this.camera instanceof l){this.camera.aspect=this.ASPECT_RATIO,this.camera.updateProjectionMatrix();for(let s=0;s<this.AMOUNT;s++)for(let a=0;a<this.AMOUNT;a++){const t=this.camera.cameras[this.AMOUNT*s+a];t.viewport.set(Math.floor(a*this.WIDTH),Math.floor(s*this.HEIGHT),Math.ceil(this.WIDTH),Math.ceil(this.HEIGHT)),t.aspect=this.ASPECT_RATIO,t.updateProjectionMatrix()}}(e=this.renderer)==null||e.setSize(window.innerWidth,window.innerHeight)})}init(e){super.init(e),this.ASPECT_RATIO=window.innerWidth/window.innerHeight,this.WIDTH=window.innerWidth/this.AMOUNT*window.devicePixelRatio,this.HEIGHT=window.innerHeight/this.AMOUNT*window.devicePixelRatio;const s=[];for(let c=0;c<this.AMOUNT;c++)for(let d=0;d<this.AMOUNT;d++){const r=new O(40,this.ASPECT_RATIO,.1,10);r.viewport=new E(Math.floor(d*this.WIDTH),Math.floor(c*this.HEIGHT),Math.ceil(this.WIDTH),Math.ceil(this.HEIGHT)),r.position.set(d/this.AMOUNT-.5,.5-c/this.AMOUNT,1.5),r.position.multiplyScalar(2),r.lookAt(0,0,0),r.updateMatrixWorld(),s.push(r)}const a=new l(s);a.position.z=3,this.camera=a;const t=new P;this.scene=t,t.add(new S(2236996));const w=this.utils.createDirectionalLight(16777215,[.5,.5,1]);w.castShadow=!0,w.shadow.camera.zoom=4,t.add(w);const M=new f(100,100),H=new m({color:102}),T=new A(M,H);T.receiveShadow=!0,T.position.set(0,0,-1),t.add(T);const h=new A(new g(.5,.5,1,32),new m({color:16711680}));h.castShadow=!0,h.receiveShadow=!0,t.add(h),this.mesh=h,this.renderer.shadowMap.enabled=!0}run(){return this.mesh&&(this.mesh.rotation.x+=.005,this.mesh.rotation.z+=.01),super.run()}}export{N as default};
